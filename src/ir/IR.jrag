aspect IR {
	public IRType IRModule.IntegerType = new IRType(new IRName("int"));
	public IRType IRModule.StringType = new IRType(new IRName("string"));
	public IRType IRModule.AnyType = new IRType(new IRName("any"));
	public IRTypeRef IRModule.IntegerTypeRef = new IRTypeInstanceRef(new Opt(), IntegerType, new List());
	public IRTypeRef IRModule.StringTypeRef = new IRTypeInstanceRef(new Opt(), StringType, new List());
	public IRTypeRef IRModule.AnyTypeRef = new IRTypeInstanceRef(new Opt(), AnyType, new List());

	public String IRModule.defaultName = "main";

	syn nta List<IRType> IRModule.builtinTypes() {
		List<IRType> btypes = new List<>();
		btypes.add(IntegerType);
		btypes.add(StringType);
		btypes.add(AnyType);
		return btypes;
	}

	inh int IRCodeBB.getNumber();
	eq IRFunction.getIRCodeBB(int i).getNumber() = i;
	syn String IRCodeBB.label() = "bb" + getNumber();

	inh IRModule IRFunction.getModule();
	eq IRModule.getIRFunction().getModule() = this;
	inh IRModule IRConstant.getModule();
}

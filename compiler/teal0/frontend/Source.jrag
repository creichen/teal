import lang.common.SourceLocation;

aspect Source {
	// Our tests assume that the leftmost column is offset 0, so that is the default.
	public static int ASTNode.SOURCE_LEFTMOST_COLUMN_OFFSET = 0;

	private String Module.sourceFile = "";

	public void Module.setSourceFile(String src) {
		this.sourceFile = src;
	}

	public String Module.sourceFile() {
		return sourceFile;
	}

	inh String ASTNode.sourceFile();
	syn String Program.sourceFile() = null;
	eq Program.getChild().sourceFile() = null;
	eq Program.getBuiltinDecls().sourceFile() = SourceLocation.BUILTIN_FILENAME_PLACEHOLDER;
	eq Module.getChild().sourceFile() = sourceFile();

	syn boolean Program.isBuiltin() = false;
	syn boolean ASTNode.isBuiltin() = this.sourceFile() == SourceLocation.BUILTIN_FILENAME_PLACEHOLDER;

	public int ASTNode.startLine() {
		return beaver.Symbol.getLine(getStartLoc());
	}

	public int ASTNode.endLine() {
		return beaver.Symbol.getLine(getEndLoc());
	}

	public int ASTNode.startColumn() {
		int loc = getStartLoc();
		if (loc == 0) {
			return 0;
		}
		return beaver.Symbol.getColumn(loc) + ASTNode.SOURCE_LEFTMOST_COLUMN_OFFSET;
	}

	public int ASTNode.endColumn() {
		int loc = getEndLoc();
		if (loc == 0) {
			return 0;
		}
		return beaver.Symbol.getColumn(loc) + ASTNode.SOURCE_LEFTMOST_COLUMN_OFFSET;
	}

	inh int ASTNode.getParentStartLoc();
	eq ASTNode.getChild().getParentStartLoc() {
		return getStartLoc();
	}

	syn int ASTNode.getStartLoc() {
		if (getStart() != 0) {
			return getStart();
		}
		if (getParent() == null) {
			return 0;
		}
		return getParentStartLoc();
	}


	inh int ASTNode.getParentEndLoc();
	eq ASTNode.getChild().getParentEndLoc() {
		return getEndLoc();
	}

	syn int ASTNode.getEndLoc() {
		if (getEnd() != 0) {
			return getEnd();
		}
		if (getParent() == null) {
			return 0;
		}
		return getParentEndLoc();
	}

	public SourceLocation ASTNode.sourceLocation() {
		return new SourceLocation(this.sourceFile(),
					  this.startLine(),
					  this.startColumn(),
					  this.endLine(),
					  this.endColumn());
	}
}

aspect TypeAnalysis {
	public interface TypeDefinition {
		lang.ir.IRTypeRef genIRTypeRef(); // code generation
	}

	Type implements TypeDefinition;

        // Should be UnknownType
	syn TypeDefinition Expr.type() = new AnyType();
	eq IntConstant.type() = new IntType();
	eq StringConstant.type() = new StringType();
	eq TypedExpr.type() {
		return getType();
	}

	syn TypeDefinition Decl.type() = null;
	eq VarDecl.type() {
		if (hasType()) {
			return getType();
		}
		if (hasInitializer()) {
			return getInitializer().type();
		}
		return new AnyType();
	}
	eq FunDecl.type() {
		if (hasType()) {
			return getType();
		}
		return new AnyType();
	}
}

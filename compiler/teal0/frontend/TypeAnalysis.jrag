aspect TypeAnalysis {
	public interface TypeDefinition {
		lang.ir.IRTypeRef genIRTypeRef(); // code generation
	}

	Type implements TypeDefinition;

        // Should be UnknownType
	syn TypeDefinition Expr.type() = new AnyType();
	eq IntConstant.type() = new IntType();
	eq StringConstant.type() = new StringType();
	eq TypedExpr.type() {
		return getDeclaredType();
	}

	//	syn TypeDefinition Decl.type() = null;
	// The type of this variable, as far as we can tell (without trying very hard); never null
	syn TypeDefinition VarDecl.variableType() {
		if (hasDeclaredType()) {
			return getDeclaredType();
		}
		if (hasInitializer()) {
			return getInitializer().type();
		}
		return new AnyType();
	}

	// The return type; never null
	syn TypeDefinition FunDecl.returnType() {
		if (hasDeclaredReturnType()) {
			return getDeclaredReturnType();
		}
		return new AnyType();
	}
}

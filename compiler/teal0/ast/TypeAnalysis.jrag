aspect TypeAnalysis {
	syn TypeDefinition Expr.type() = program().ANY();
	eq IntConstant.type() = program().INT();
	eq StringConstant.type() = program().STRING();
	eq TypedExpr.type() {
		return (TypeDefinition) getType().getIdUse().lookup().getDecl();
	}

	syn TypeDefinition Decl.type() = null;
	eq VarDecl.type() {
		if (hasType())
			return (TypeDefinition) getType().getIdUse().lookup().getDecl();
		if (hasInitializer())
			return getInitializer().type();
		return program().ANY();
	}
	eq FunDecl.type() {
		if (hasType())
			return (TypeDefinition) getType().getIdUse().lookup().getDecl();
		return program().ANY();
	}
}
